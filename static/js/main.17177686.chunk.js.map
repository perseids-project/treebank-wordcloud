{"version":3,"sources":["components/Home/Home.js","components/Cloud/Cloud.js","components/Cloud/stopwords.js","components/Cloud/WordCloudWrapper.js","components/Home/index.js","components/Cloud/index.js","components/App/index.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Home","props","state","url","handleChange","bind","event","value","target","this","setState","escapedUrl","Buffer","from","toString","className","id","type","onChange","placeholder","aria-label","aria-describedby","to","href","Component","addSubdoc","subDoc","subDocs","Object","keys","words","length","push","extractSubDocs","text","matches","match","Error","currentSubdocName","currentSubdoc","name","forEach","test","word","isStopword","addWord","Cloud","error","isLoaded","showDropdown","index","toggleDropdown","renderWordCloud","renderNavigation","fetch","then","response","normalize","catch","params","parseInt","docs","map","newIndex","data-toggle","onClick","style","maxHeight","overflow","width","message","minHeight","rel","stopwords","αὐτὸς","αὐτός","γε","γὰρ","γάρ","δαὶ","δαὶς","δαί","δαίς","διὰ","διά","δὲ","δέ","δὴ","δή","εἰ","εἰμὶ","εἰμί","εἰς","εἴμι","κατὰ","κατά","καὶ","καί","μετὰ","μετά","μὲν","μέν","μὴ","μή","οἱ","οὐ","οὐδεὶς","οὐδείς","οὐδὲ","οὐδέ","οὐκ","οὔτε","οὕτως","οὖν","οὗτος","παρὰ","παρά","περὶ","περί","πρὸς","πρός","σὸς","σός","σὺ","σύ","σύν","τε","τι","τις","τοιοῦτος","τοὶ","τοί","τοὺς","τούς","τοῦ","τὰ","τά","τὴν","τήν","τὶ","τὶς","τί","τίς","τὸ","τὸν","τό","τόν","τῆς","τῇ","τῶν","τῷ","ἀλλὰ","ἀλλά","ἀπὸ","ἀπό","ἂν","ἄλλος","ἄν","ἄρα","ἐγὼ","ἐγώ","ἐκ","ἐξ","ἐμὸς","ἐμός","ἐν","ἐπὶ","ἐπί","ἐὰν","ἐάν","ἑαυτοῦ","ἔτι","ἡ","ἢ","ἤ","ὁ","ὃδε","ὃς","ὅδε","ὅς","ὅστις","ὅτι","ὑμὸς","ὑμός","ὑπὲρ","ὑπέρ","ὑπὸ","ὑπό","ὡς","ὥστε","ὦ","ξύν","ξὺν","σὺν","τοῖς","τᾶς","ab","ac","ad","adhic","aliqui","aliquis","an","ante","apud","at","atque","aut","autem","cum","cur","de","deinde","dum","ego","enim","ergo","es","est","et","etiam","etsi","ex","fio","haud","hic","iam","idem","igitur","ille","in","infra","inter","interim","ipse","is","ita","magis","modo","mox","nam","ne","nec","necque","neque","nisi","non","nos","o","ob","per","possum","post","pro","quae","quam","quare","qui","quia","quicumque","quidem","quilibet","quis","quisnam","quisquam","quisque","quisquis","quo","quoniam","sed","si","sic","sive","sub","sui","sum","super","suus","tam","tamen","trans","tu","tum","ubi","uel","uero","unus","ut","punc","jam","options","colors","enableTooltip","deterministic","fontFamily","fontSizes","fontStyle","fontWeight","padding","rotations","rotationAngles","scale","spiral","transitionDuration","convertToWordCloudFormat","wordCloudArray","WordCloudWrapper","App","basename","process","exact","role","path","component","github","report","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.17177686.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      url: 'https://perseids-publications.github.io/harrington-trees/xml/CITE_TREEBANK_XML/perseus/lattb/4362/lattb.4362.1.tb.xml',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { value } = event.target;\n\n    this.setState({\n      url: value,\n    });\n  }\n\n  render() {\n    const { url } = this.state;\n    const escapedUrl = Buffer.from(url).toString('base64');\n\n    return (\n      <>\n        <header>\n          <div className=\"row pt-4\">\n            <div className=\"col\">\n              <h3>\n                Word Cloud from Treebank\n              </h3>\n              <h6>\n                Enter the URL for a treebank XML document:\n              </h6>\n            </div>\n          </div>\n        </header>\n        <div className=\"row pt-2\">\n          <div className=\"col col-lg-10 offset-lg-1\">\n\n            <div className=\"input-group input-group-lg pb-2\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"url-input-group\">URL:</span>\n              </div>\n              <input className=\"form-control\" type=\"text\" value={url} onChange={this.handleChange} placeholder=\"Enter URL ...\" aria-label=\"URL\" aria-describedby=\"url-input-group\" />\n            </div>\n\n            <Link className=\"btn btn-block btn-primary\" to={`/${escapedUrl}`}>\n              Create word cloud\n            </Link>\n          </div>\n        </div>\n        <hr />\n        <div className=\"row pt-2\">\n          <div className=\"col\">\n            <h4>\n              Examples\n            </h4>\n          </div>\n        </div>\n        <div className=\"row pt-2\">\n          <div className=\"col-md-6\">\n            <dt>\n              Herodotus\n              <em>\n                The Histories\n              </em>\n            </dt>\n            <dd>\n              <a href=\"/\">\n                1.1-1.19\n              </a>\n            </dd>\n          </div>\n          <div className=\"col-md-6\">\n            <ul />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { shape, string } from 'prop-types';\nimport fetch from 'cross-fetch';\nimport { Link } from 'react-router-dom';\n\nimport { isStopword } from './stopwords';\nimport WordCloudWrapper from './WordCloudWrapper';\n\nconst addSubdoc = (subDoc, subDocs) => {\n  if (Object.keys(subDoc.words).length !== 0) {\n    subDocs.push(subDoc);\n  }\n\n  return subDocs;\n};\n\nconst addWord = (subDoc, word) => {\n  const { words } = subDoc;\n\n  if (isStopword(word)) {\n    return subDoc;\n  }\n\n  if (word in words) {\n    words[word] += 1;\n  } else {\n    words[word] = 1;\n  }\n\n  return subDoc;\n};\n\nconst extractSubDocs = (text) => {\n  const subDocs = [];\n  const regex = /(subdoc=[\"'].*?[\"'])|(lemma=[\"'].*?[\"'])/g;\n  const matches = text.match(regex);\n\n  if (matches.length === 0) {\n    throw new Error('Could not parse XML');\n  }\n\n  let currentSubdocName = 'Initial';\n  let currentSubdoc = {\n    name: currentSubdocName,\n    words: {},\n  };\n  matches.forEach((match) => {\n    if (/^subdoc/.test(match)) {\n      // eslint-disable-next-line prefer-destructuring\n      currentSubdocName = match.match(/subdoc=[\"'](.*?)[\"']/)[1];\n\n      if (currentSubdocName !== currentSubdoc.name) {\n        addSubdoc(currentSubdoc, subDocs);\n        currentSubdoc = {\n          name: currentSubdocName,\n          words: {},\n        };\n      }\n    }\n\n    if (/^lemma/.test(match)) {\n      // Some words have a number following them: e.g. sum1\n      // In certain cases this is because there are multiple words with the\n      // same dictionary form. But dealing with this edge case creates more\n      // complications than it's worth: word clouds are meant to give a broad\n      // overview of the vocabulary of a passage.\n      addWord(currentSubdoc, match.match(/lemma=[\"'](.*?)\\d*[\"']/)[1]);\n    }\n  });\n  addSubdoc(currentSubdoc, subDocs);\n\n  return subDocs;\n};\n\nclass Cloud extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      subDocs: [],\n      showDropdown: false,\n    };\n\n    this.url = this.url.bind(this);\n    this.index = this.index.bind(this);\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n    this.renderWordCloud = this.renderWordCloud.bind(this);\n    this.renderNavigation = this.renderNavigation.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(this.url())\n      .then((response) => response.text())\n      .then((text) => extractSubDocs(text.normalize('NFC')))\n      .then((subDocs) => {\n        this.setState({\n          isLoaded: true,\n          subDocs,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          isLoaded: true,\n          error,\n        });\n      });\n  }\n\n  url() {\n    const { match: { params: { url } } } = this.props;\n\n    return Buffer.from(url, 'base64').toString();\n  }\n\n  index() {\n    const { match: { params: { index = '0' } } } = this.props;\n\n    return parseInt(index, 10);\n  }\n\n  toggleDropdown() {\n    this.setState(({ showDropdown }) => ({\n      showDropdown: !showDropdown,\n    }));\n  }\n\n  renderNavigation() {\n    const { match: { params: { url } } } = this.props;\n    const { subDocs, showDropdown } = this.state;\n    const index = this.index();\n    const { name } = subDocs[index];\n\n    const docs = subDocs.map((subDoc, newIndex) => (\n      // eslint-disable-next-line react/no-array-index-key\n      <Link key={`subdoc-${newIndex}`} className=\"dropdown-item\" to={`/${url}/${newIndex}`}>\n        {subDoc.name}\n      </Link>\n    ));\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-4 col-md-2 offset-md-2\">\n          {(index > 0) && <Link to={`/${url}/${index - 1}`} className=\"btn btn-block btn-secondary\">«</Link>}\n        </div>\n        <div className=\"col-4\">\n          <div className=\"dropdown\">\n            <button type=\"button\" className=\"btn btn-block btn-secondary dropdown-toggle\" data-toggle=\"dropdown\" onClick={this.toggleDropdown}>\n              {name}\n              <i className=\"fa fa-caret-down\" />\n            </button>\n            <div className={`dropdown-menu ${showDropdown ? 'show' : ''}`} style={{ maxHeight: '400px', overflow: 'scroll', width: '100%' }}>\n              {docs}\n            </div>\n          </div>\n        </div>\n        <div className=\"col-4 col-md-2\">\n          {(index < subDocs.length - 1) && <Link to={`/${url}/${index + 1}`} className=\"btn btn-block btn-secondary\">»</Link>}\n        </div>\n      </div>\n    );\n  }\n\n  renderWordCloud() {\n    const {\n      error, isLoaded, subDocs,\n    } = this.state;\n    const index = this.index();\n\n    if (error) {\n      return (\n        <div>\n          Error:\n          {' '}\n          {error.message}\n        </div>\n      );\n    } if (!isLoaded) {\n      return (\n        <div>\n          Loading...\n        </div>\n      );\n    }\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col\">\n            {this.renderNavigation()}\n          </div>\n        </div>\n        <div className=\"row pt-3\">\n          <div className=\"col\">\n            <div style={{ minHeight: '500px' }}>\n              <WordCloudWrapper words={subDocs[index].words} />\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    const url = this.url();\n\n    return (\n      <>\n        <header>\n          <div className=\"row pt-4\">\n            <div className=\"col\">\n              <h3>\n                Wordcloud from Treebank\n              </h3>\n              <h6>\n                <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {url}\n                </a>\n              </h6>\n            </div>\n          </div>\n        </header>\n        <div className=\"row pt-2\">\n          <div className=\"col\">\n            {this.renderWordCloud()}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nCloud.propTypes = {\n  match: shape({\n    params: shape({\n      url: string.isRequired,\n      index: string,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default Cloud;\n","const stopwords = {\n  // https://github.com/cltk/cltk/blob/22fabfd4e26f677ecce30871af78561edefcaef6/cltk/stop/greek/stops.py\n  αὐτὸς: true,\n  αὐτός: true,\n  γε: true,\n  γὰρ: true,\n  γάρ: true,\n  \"δ'\": true,\n  δαὶ: true,\n  δαὶς: true,\n  δαί: true,\n  δαίς: true,\n  διὰ: true,\n  διά: true,\n  δὲ: true,\n  δέ: true,\n  δὴ: true,\n  δή: true,\n  εἰ: true,\n  εἰμὶ: true,\n  εἰμί: true,\n  εἰς: true,\n  εἴμι: true,\n  κατὰ: true,\n  κατά: true,\n  καὶ: true,\n  καί: true,\n  μετὰ: true,\n  μετά: true,\n  μὲν: true,\n  μέν: true,\n  μὴ: true,\n  μή: true,\n  οἱ: true,\n  οὐ: true,\n  οὐδεὶς: true,\n  οὐδείς: true,\n  οὐδὲ: true,\n  οὐδέ: true,\n  οὐκ: true,\n  οὔτε: true,\n  οὕτως: true,\n  οὖν: true,\n  οὗτος: true,\n  παρὰ: true,\n  παρά: true,\n  περὶ: true,\n  περί: true,\n  πρὸς: true,\n  πρός: true,\n  σὸς: true,\n  σός: true,\n  σὺ: true,\n  σύ: true,\n  σύν: true,\n  τε: true,\n  τι: true,\n  τις: true,\n  τοιοῦτος: true,\n  τοὶ: true,\n  τοί: true,\n  τοὺς: true,\n  τούς: true,\n  τοῦ: true,\n  τὰ: true,\n  τά: true,\n  τὴν: true,\n  τήν: true,\n  τὶ: true,\n  τὶς: true,\n  τί: true,\n  τίς: true,\n  τὸ: true,\n  τὸν: true,\n  τό: true,\n  τόν: true,\n  τῆς: true,\n  τῇ: true,\n  τῶν: true,\n  τῷ: true,\n  \"ἀλλ'\": true,\n  ἀλλὰ: true,\n  ἀλλά: true,\n  ἀπὸ: true,\n  ἀπό: true,\n  ἂν: true,\n  ἄλλος: true,\n  ἄν: true,\n  ἄρα: true,\n  ἐγὼ: true,\n  ἐγώ: true,\n  ἐκ: true,\n  ἐξ: true,\n  ἐμὸς: true,\n  ἐμός: true,\n  ἐν: true,\n  ἐπὶ: true,\n  ἐπί: true,\n  ἐὰν: true,\n  ἐάν: true,\n  ἑαυτοῦ: true,\n  ἔτι: true,\n  ἡ: true,\n  ἢ: true,\n  ἤ: true,\n  ὁ: true,\n  ὃδε: true,\n  ὃς: true,\n  ὅδε: true,\n  ὅς: true,\n  ὅστις: true,\n  ὅτι: true,\n  ὑμὸς: true,\n  ὑμός: true,\n  ὑπὲρ: true,\n  ὑπέρ: true,\n  ὑπὸ: true,\n  ὑπό: true,\n  ὡς: true,\n  ὥστε: true,\n  ὦ: true,\n  ξύν: true,\n  ξὺν: true,\n  σὺν: true,\n  τοῖς: true,\n  τᾶς: true,\n  // https://github.com/cltk/cltk/blob/22fabfd4e26f677ecce30871af78561edefcaef6/cltk/stop/latin.py\n  ab: true,\n  ac: true,\n  ad: true,\n  adhic: true,\n  aliqui: true,\n  aliquis: true,\n  an: true,\n  ante: true,\n  apud: true,\n  at: true,\n  atque: true,\n  aut: true,\n  autem: true,\n  cum: true,\n  cur: true,\n  de: true,\n  deinde: true,\n  dum: true,\n  ego: true,\n  enim: true,\n  ergo: true,\n  es: true,\n  est: true,\n  et: true,\n  etiam: true,\n  etsi: true,\n  ex: true,\n  fio: true,\n  haud: true,\n  hic: true,\n  iam: true,\n  idem: true,\n  igitur: true,\n  ille: true,\n  in: true,\n  infra: true,\n  inter: true,\n  interim: true,\n  ipse: true,\n  is: true,\n  ita: true,\n  magis: true,\n  modo: true,\n  mox: true,\n  nam: true,\n  ne: true,\n  nec: true,\n  necque: true,\n  neque: true,\n  nisi: true,\n  non: true,\n  nos: true,\n  o: true,\n  ob: true,\n  per: true,\n  possum: true,\n  post: true,\n  pro: true,\n  quae: true,\n  quam: true,\n  quare: true,\n  qui: true,\n  quia: true,\n  quicumque: true,\n  quidem: true,\n  quilibet: true,\n  quis: true,\n  quisnam: true,\n  quisquam: true,\n  quisque: true,\n  quisquis: true,\n  quo: true,\n  quoniam: true,\n  sed: true,\n  si: true,\n  sic: true,\n  sive: true,\n  sub: true,\n  sui: true,\n  sum: true,\n  super: true,\n  suus: true,\n  tam: true,\n  tamen: true,\n  trans: true,\n  tu: true,\n  tum: true,\n  ubi: true,\n  uel: true,\n  uero: true,\n  unus: true,\n  ut: true,\n  // Custom\n  punc: true,\n  '-que': true,\n  jam: true,\n};\n\nconst isStopword = (word) => (\n  !!stopwords[word]\n);\n\nexport {\n  stopwords,\n  isStopword,\n};\n","import React from 'react';\nimport { objectOf, number } from 'prop-types';\nimport ReactWordcloud from 'react-wordcloud';\n\nconst options = {\n  colors: ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b'],\n  enableTooltip: true,\n  deterministic: true,\n  fontFamily: 'tinos',\n  fontSizes: [20, 80],\n  fontStyle: 'normal',\n  fontWeight: 'bold',\n  padding: 1,\n  rotations: 2,\n  rotationAngles: [-90, 0],\n  scale: 'linear',\n  spiral: 'rectangular',\n  transitionDuration: 0,\n};\n\nconst convertToWordCloudFormat = (words) => {\n  const wordCloudArray = [];\n\n  Object.keys(words).forEach((text) => {\n    const value = words[text];\n\n    wordCloudArray.push({ text, value });\n  });\n\n  return wordCloudArray;\n};\n\nconst WordCloudWrapper = ({ words }) => (\n  <ReactWordcloud\n    words={convertToWordCloudFormat(words)}\n    options={options}\n  />\n);\n\nWordCloudWrapper.propTypes = {\n  words: objectOf(number).isRequired,\n};\n\nexport default WordCloudWrapper;\n","import Home from './Home';\n\nexport default Home;\n","import Cloud from './Cloud';\n\nexport default Cloud;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport { PerseidsHeader, PerseidsFooter } from 'perseids-react-components';\nimport {\n  BrowserRouter as Router, Route, Switch, NavLink,\n} from 'react-router-dom';\n\nimport Home from '../Home';\nimport Cloud from '../Cloud';\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <PerseidsHeader>\n      Treebank Word Cloud\n\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <NavLink className=\"nav-link\" exact to=\"/\">\n            Home\n          </NavLink>\n        </li>\n      </ul>\n    </PerseidsHeader>\n    <main role=\"main\">\n      <div className=\"container text-center\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/:url/:index?\" component={Cloud} />\n        </Switch>\n      </div>\n    </main>\n    <PerseidsFooter\n      github=\"https://github.com/perseids-project/treebank-wordcloud\"\n      report=\"https://github.com/perseids-project/treebank-wordcloud/issues\"\n    />\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'perseids-react-components/build/css/index.css';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}